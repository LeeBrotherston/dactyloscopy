// Code generated by "stringer -type=IanaExtension"; DO NOT EDIT.

package dactyloscopy

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[server_name-0]
	_ = x[max_fragment_length-1]
	_ = x[client_certificate_url-2]
	_ = x[trusted_ca_keys-3]
	_ = x[truncated_hmac-4]
	_ = x[status_request-5]
	_ = x[user_mapping-6]
	_ = x[client_authz-7]
	_ = x[server_authz-8]
	_ = x[cert_type-9]
	_ = x[supported_groups-10]
	_ = x[ec_point_formats-11]
	_ = x[srp-12]
	_ = x[signature_algorithms-13]
	_ = x[use_srtp-14]
	_ = x[heartbeat-15]
	_ = x[application_layer_protocol_negotiation-16]
	_ = x[status_request_v2-17]
	_ = x[signed_certificate_timestamp-18]
	_ = x[client_certificate_type-19]
	_ = x[server_certificate_type-20]
	_ = x[padding-21]
	_ = x[encrypt_then_mac-22]
	_ = x[extended_master_secret-23]
	_ = x[token_binding-24]
	_ = x[cached_info-25]
	_ = x[tls_lts-26]
	_ = x[compress_certificate-27]
	_ = x[record_size_limit-28]
	_ = x[pwd_protect-29]
	_ = x[pwd_clear-30]
	_ = x[password_salt-31]
	_ = x[ticket_pinning-32]
	_ = x[tls_cert_with_extern_psk-33]
	_ = x[delegated_credential-34]
	_ = x[session_ticket-35]
	_ = x[TLMSP-36]
	_ = x[TLMSP_proxying-37]
	_ = x[TLMSP_delegate-38]
	_ = x[supported_ekt_ciphers-39]
	_ = x[pre_shared_key-41]
	_ = x[early_data-42]
	_ = x[supported_versions-43]
	_ = x[cookie-44]
	_ = x[psk_key_exchange_modes-45]
	_ = x[certificate_authorities-47]
	_ = x[oid_filters-48]
	_ = x[post_handshake_auth-49]
	_ = x[signature_algorithms_cert-50]
	_ = x[key_share-51]
	_ = x[transparency_info-52]
	_ = x[connection_id_deprecated-53]
	_ = x[connection_id-54]
	_ = x[external_id_hash-55]
	_ = x[external_session_id-56]
	_ = x[quic_transport_parameters-57]
	_ = x[ticket_request-58]
	_ = x[dnssec_chain-59]
	_ = x[sequence_number_encryption_algorithms-60]
	_ = x[rrc-61]
	_ = x[tls_flags-62]
	_ = x[ech_outer_extensions-64768]
	_ = x[encrypted_client_hello-65037]
	_ = x[PrivateUse-65280]
	_ = x[renegotiation_info-65281]
}

const (
	_IanaExtension_name_0 = "server_namemax_fragment_lengthclient_certificate_urltrusted_ca_keystruncated_hmacstatus_requestuser_mappingclient_authzserver_authzcert_typesupported_groupsec_point_formatssrpsignature_algorithmsuse_srtpheartbeatapplication_layer_protocol_negotiationstatus_request_v2signed_certificate_timestampclient_certificate_typeserver_certificate_typepaddingencrypt_then_macextended_master_secrettoken_bindingcached_infotls_ltscompress_certificaterecord_size_limitpwd_protectpwd_clearpassword_saltticket_pinningtls_cert_with_extern_pskdelegated_credentialsession_ticketTLMSPTLMSP_proxyingTLMSP_delegatesupported_ekt_ciphers"
	_IanaExtension_name_1 = "pre_shared_keyearly_datasupported_versionscookiepsk_key_exchange_modes"
	_IanaExtension_name_2 = "certificate_authoritiesoid_filterspost_handshake_authsignature_algorithms_certkey_sharetransparency_infoconnection_id_deprecatedconnection_idexternal_id_hashexternal_session_idquic_transport_parametersticket_requestdnssec_chainsequence_number_encryption_algorithmsrrctls_flags"
	_IanaExtension_name_3 = "ech_outer_extensions"
	_IanaExtension_name_4 = "encrypted_client_hello"
	_IanaExtension_name_5 = "PrivateUserenegotiation_info"
)

var (
	_IanaExtension_index_0 = [...]uint16{0, 11, 30, 52, 67, 81, 95, 107, 119, 131, 140, 156, 172, 175, 195, 203, 212, 250, 267, 295, 318, 341, 348, 364, 386, 399, 410, 417, 437, 454, 465, 474, 487, 501, 525, 545, 559, 564, 578, 592, 613}
	_IanaExtension_index_1 = [...]uint8{0, 14, 24, 42, 48, 70}
	_IanaExtension_index_2 = [...]uint16{0, 23, 34, 53, 78, 87, 104, 128, 141, 157, 176, 201, 215, 227, 264, 267, 276}
	_IanaExtension_index_5 = [...]uint8{0, 10, 28}
)

func (i IanaExtension) String() string {
	switch {
	case i <= 39:
		return _IanaExtension_name_0[_IanaExtension_index_0[i]:_IanaExtension_index_0[i+1]]
	case 41 <= i && i <= 45:
		i -= 41
		return _IanaExtension_name_1[_IanaExtension_index_1[i]:_IanaExtension_index_1[i+1]]
	case 47 <= i && i <= 62:
		i -= 47
		return _IanaExtension_name_2[_IanaExtension_index_2[i]:_IanaExtension_index_2[i+1]]
	case i == 64768:
		return _IanaExtension_name_3
	case i == 65037:
		return _IanaExtension_name_4
	case 65280 <= i && i <= 65281:
		i -= 65280
		return _IanaExtension_name_5[_IanaExtension_index_5[i]:_IanaExtension_index_5[i+1]]
	default:
		return "IanaExtension(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
